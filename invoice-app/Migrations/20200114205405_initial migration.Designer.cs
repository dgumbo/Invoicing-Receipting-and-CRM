// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using invoice_app;

namespace invoice_app.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200114205405_initial migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("invoice_demo_app.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus")
                        .HasColumnName("active_status")
                        .HasColumnType("bit");

                    b.Property<string>("Address1")
                        .HasColumnName("Address1")
                        .HasColumnType("nVarChar(50)");

                    b.Property<string>("Address2")
                        .HasColumnName("Address2")
                        .HasColumnType("nVarChar(50)");

                    b.Property<string>("Address3")
                        .HasColumnName("Address3")
                        .HasColumnType("nVarChar(50)");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("nVarChar(50)");

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("nVarChar(50)");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnName("created_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("creation_time")
                        .HasColumnType("DateTime");

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasColumnType("nVarChar(50)");

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasColumnType("nVarChar(50)");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnName("modification_time")
                        .HasColumnType("DateTime");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnName("modified_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("nVarChar(25)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("invoice_demo_app.Models.PaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus")
                        .HasColumnName("active_status")
                        .HasColumnType("bit");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("VarChar(3)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("VarChar(16)");

                    b.Property<string>("CardOwnerName")
                        .IsRequired()
                        .HasColumnType("nVarChar(100)");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnName("created_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("creation_time")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnName("modification_time")
                        .HasColumnType("DateTime");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnName("modified_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.HasKey("Id");

                    b.ToTable("PaymentDetail");
                });

            modelBuilder.Entity("invoice_demo_app.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus")
                        .HasColumnName("active_status")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnName("created_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("creation_time")
                        .HasColumnType("DateTime");

                    b.Property<string>("Description")
                        .HasColumnType("nVarChar(Max)");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnName("modification_time")
                        .HasColumnType("DateTime");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnName("modified_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nVarChar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("_number")
                        .HasColumnType("nVarChar(25)");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("invoice_demo_app.Models.ShippingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus")
                        .HasColumnName("active_status")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnName("created_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("creation_time")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnName("modification_time")
                        .HasColumnType("DateTime");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnName("modified_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<DateTime>("dueDate")
                        .HasColumnName("due_date")
                        .HasColumnType("DateTime");

                    b.Property<string>("salesRep")
                        .HasColumnName("sales_rep")
                        .HasColumnType("nVarChar(50)");

                    b.Property<DateTime>("shipDate")
                        .HasColumnName("ship_date")
                        .HasColumnType("DateTime");

                    b.Property<string>("shipNumber")
                        .HasColumnName("ship_number")
                        .HasColumnType("nVarChar(25)");

                    b.Property<string>("shipVia")
                        .HasColumnName("ship_via")
                        .HasColumnType("nVarChar(50)");

                    b.Property<string>("terms")
                        .HasColumnName("terms")
                        .HasColumnType("nVarChar(100)");

                    b.HasKey("Id");

                    b.ToTable("ShippingData");
                });

            modelBuilder.Entity("invoice_demo_app.Pdf.models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus")
                        .HasColumnName("active_status")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnName("created_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("creation_time")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("Date")
                        .HasColumnName("invoice_date")
                        .HasColumnType("DateTime");

                    b.Property<string>("EndNotes")
                        .HasColumnName("end_notes")
                        .HasColumnType("nVarChar(Max)");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnName("modification_time")
                        .HasColumnType("DateTime");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnName("modified_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("invoice_number")
                        .HasColumnType("nVarChar(25)");

                    b.Property<string>("PaymentDetails")
                        .HasColumnName("payment_details")
                        .HasColumnType("nVarChar(Max)");

                    b.Property<int?>("bill_to_id")
                        .HasColumnType("int");

                    b.Property<int?>("ship_to_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("bill_to_id");

                    b.HasIndex("ship_to_id");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("invoice_demo_app.Pdf.models.InvoiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus")
                        .HasColumnName("active_status")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnName("created_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("creation_time")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnName("modification_time")
                        .HasColumnType("DateTime");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnName("modified_by_user")
                        .HasColumnType("nVarChar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("numeric(16, 6)");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("invoice_id")
                        .HasColumnType("int");

                    b.Property<int?>("product_id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("invoice_id");

                    b.HasIndex("product_id");

                    b.ToTable("InvoiceLine");
                });

            modelBuilder.Entity("invoice_demo_app.Pdf.models.Invoice", b =>
                {
                    b.HasOne("invoice_demo_app.Models.Address", "BillTo")
                        .WithMany()
                        .HasForeignKey("bill_to_id");

                    b.HasOne("invoice_demo_app.Models.Address", "ShipTo")
                        .WithMany()
                        .HasForeignKey("ship_to_id");
                });

            modelBuilder.Entity("invoice_demo_app.Pdf.models.InvoiceLine", b =>
                {
                    b.HasOne("invoice_demo_app.Pdf.models.Invoice", "Invoice")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("invoice_id");

                    b.HasOne("invoice_demo_app.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
