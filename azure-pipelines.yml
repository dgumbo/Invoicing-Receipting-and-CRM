trigger:
- '*'

pool:
  vmImage: 'ubuntu-16.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 3.1.100'
  inputs:
    packageType: sdk
    version: 3.1.100  
    
- script: 'sudo npm install -g @angular/cli'
  displayName: 'Install @Angular/Cli Global'
  # workingDirectory: ./invoice-app/ClientApp
    
- script: 'ng --version'
  displayName: 'Display @Angular/Cli Version'
  # workingDirectory: ./invoice-app/ClientApp

# - task: Npm@1
#   displayName: 'Run npm install'
#   workingDirectory: ./invoice-app/ClientApp
#   inputs: 
#     verbose: false
#     command: custom
#     customCommand: install ./invoice-app/ClientApp

- script: 'npm install'
  displayName: 'Run npm install'
  workingDirectory: ./invoice-app/ClientApp
  # inputs: 
  #   verbose: false
  #   command: custom
  #   customCommand: install ./invoice-app/ClientApp

- task: Npm@1
  displayName: 'Build Frontend for Production'
  inputs: 
    verbose: false
    command: custom
    customCommand: run-script build-prod --prefix ./invoice-app/ClientApp

##- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
##  displayName: 'Compile Sass assets'

##- task: gulp@1
##  displayName: 'Run gulp tasks'

#- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
#  displayName: 'Write build info'
#  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'